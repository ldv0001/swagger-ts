// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "get cars from db",
                "produces": [
                    "application/json"
                ],
                "summary": "GetCars",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get car by regNum",
                        "name": "regNum",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "get car by mark",
                        "name": "mark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "get car by model",
                        "name": "model",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "get car by year",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "get car by owner's name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "get car by owner's surname",
                        "name": "surname",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "get car by owners patronymic",
                        "name": "patronymic",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/add": {
            "post": {
                "description": "add cars to db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "AddCars",
                "parameters": [
                    {
                        "description": "regNums",
                        "name": "input",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/delete": {
            "get": {
                "description": "delete car from db",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete car by regNum",
                        "name": "regNum",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/update": {
            "get": {
                "description": "update cars in db",
                "produces": [
                    "application/json"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update car by regNum",
                        "name": "regNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "update car by mark",
                        "name": "mark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "update car by model",
                        "name": "model",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "update car by year",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "update car by owner's name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "update car by owner's surname",
                        "name": "surname",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "update car by owners patronymic",
                        "name": "patronymic",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Car Catalog API",
	Description:      "This is a sample server Car Catalog server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
